# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: ${{ github.event_name != 'push' || startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            python-version: 3.5
          - os: ubuntu-20.04
            python-version: 3.8
          - os: ubuntu-20.04
            python-version: 3.9
          - os: windows-2019
            python-version: 3.6
          - os: windows-2019
            python-version: 3.8
          - os: windows-2019
            python-version: 3.8
            architecture: x86
#        os: [ubuntu-20.04, windows-2019] # macOS-10.15
#        python-version: [3.6, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install Windows system dependencies
      if: ${{ matrix.os == 'windows-2019' }}
      run: choco install opus-tools flac
    - name: Install Linux system dependencies
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: sudo apt-get -y install -y -qq --no-install-recommends lame opus-tools flac
    - name: Install python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install rhvoice-wrapper-data
        pip install $(python test_helper.py ${{ matrix.os }} ${{ matrix.architecture }})
    - name: Build Linux Package
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: python setup.py sdist bdist_wheel
    - name: Build Windows Package
      if: ${{ matrix.os == 'windows-2019' }}
      run: python setup.py bdist_wininst
    - name: Test to install in Linux
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
         pip install --no-cache-dir dist/*.gz
         pip uninstall rhvoice-wrapper -y
         pip install --no-cache-dir dist/*.whl
    - name: Test with unittest
      run: python -m unittest discover -v -s rhvoice_wrapper/tests/
    - name: Upload artifacts
      if: ${{ matrix.python-version == '3.8' }}
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/
        retention-days: 2

  deploy:
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/
    - name: Deploy to GH Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
    - name: Remove exe
      run: rm dist/*.exe
    - name: Deploy to PYPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
